USE JOEYSPIZZA;

#The following are the four tables that are used for all the queries
SELECT * FROM ORDER_DETAILS;
SELECT * FROM ORDERS;
SELECT * FROM PIZZA_TYPES;
SELECT * FROM PIZZAS;




#CHANGING THE DATA TYPE OF 'date_' FIELD FROM TEXT TO DATE DATA TYPE
DESC ORDERS;
ALTER TABLE ORDERS
MODIFY date_ DATE;

#CHANGING THE DATA TYPE OF 'time' FIELD FROM TEXT TO TIME DATA TYPE
ALTER TABLE ORDERS
MODIFY time TIME;






#1) TOTAL REVENUE
SELECT ROUND(SUM(QUANTITY*PRICE)) AS TOTAL_REVENUE FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID;



#2) TOTAL_ORDERS

SELECT * FROM ORDERS;

SELECT COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS FROM ORDERS;



#3) AVERAGE PRICE OF A  PIZZA 
SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;
SELECT * FROM ORDERS;

SELECT AVG(PRICE) AS AVG_PRICE_OF_PIZZA
FROM PIZZAS;
 
 

#4) TOTAL PIZZAS SOLD
SELECT * FROM ORDER_DETAILS;

SELECT SUM(QUANTITY) AS TOTAL_PIZZAS_SOLD FROM ORDER_DETAILS;


#5) AVERAGE ORDER VALUE

SELECT TOTAL_PRICE / TOTAL_ORDERS AS AVERAGE_ORDER_VALUE
FROM 
(
 SELECT SUM(PRICE) AS TOTAL_PRICE,
 COUNT(DISTINCT O.ORDER_ID) AS TOTAL_ORDERS
 FROM ORDER_DETAILS AS OD
 JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
 JOIN ORDERS AS O ON OD.ORDER_ID = O.ORDER_ID
) AS A;


#6) AVG PIZZAS PER ORDER

SELECT * FROM ORDERS;
SELECT * FROM ORDER_DETAILS;

SELECT (TOTAL_PIZZAS_SOLD / TOTAL_ORDERS) AS AVERAGE_PIZZAS_PER_ORDER
FROM
(
 SELECT SUM(QUANTITY) AS TOTAL_PIZZAS_SOLD,
 COUNT( DISTINCT O.ORDER_ID) AS TOTAL_ORDERS
 FROM ORDER_DETAILS AS OD
 JOIN ORDERS AS O ON OD.ORDER_ID = O.ORDER_ID
 ) AS a;


#7) DAILY TRENDS FOR TOTAL ORDERS (Shows the count of orders on every day of the week)

SELECT * FROM ORDERS;

SELECT
DAYNAME(DATE_) AS WEEKDAY,
COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS
FROM ORDERS
GROUP BY WEEKDAY
ORDER BY TOTAL_ORDERS DESC;


#8) MONTHLY TRENDS FOR TOTAL ORDERS (Shows the count of orders on every month of the year)

SELECT * FROM ORDERS;

SELECT
MONTHNAME(DATE_) AS MONTH_NAME,
COUNT(DISTINCT ORDER_ID) AS TOTAL_ORDERS
FROM ORDERS
GROUP BY MONTH_NAME
ORDER BY TOTAL_ORDERS DESC;


#9 ORDERS BY HOUR (PEAK HOURS)
SELECT * FROM ORDERS;

SELECT HOUR(TIME) AS RIGHT_TIME,
COUNT(DISTINCT ORDER_ID)
FROM ORDERS
GROUP BY RIGHT_TIME
ORDER BY RIGHT_TIME;



#10) a) BEST SELLERS (TOP 5 PIZZAS)

SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;
SELECT * FROM PIZZA_TYPES;

SELECT NAME_, SUM(QUANTITY) AS PIZZAS_SOLD
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
GROUP BY NAME_
ORDER BY PIZZAS_SOLD DESC
LIMIT 5;

#b) NON-PERFORMING PIZZAS (BOTTOM 5)
SELECT NAME_, SUM(QUANTITY) AS PIZZAS_SOLD
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
GROUP BY NAME_
ORDER BY PIZZAS_SOLD
LIMIT 5;


#11) CATEGORY WISE SALES

SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;
SELECT * FROM PIZZA_TYPES;

SELECT CATEGORY, SUM(QUANTITY) AS PIZZAS_SOLD
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
GROUP BY CATEGORY
ORDER BY PIZZAS_SOLD DESC;


#12) SALES BY PIZZA SIZES

SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;

SELECT SIZE, SUM(QUANTITY) AS PIZZAS_SOLD
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY SIZE;


#13) TOP 5 PIZZAS BY REVENUE

SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;
SELECT * FROM PIZZA_TYPES;

SELECT NAME_, SUM(QUANTITY*PRICE) AS PIZZA_REVENUE
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
GROUP BY NAME_
ORDER BY PIZZA_REVENUE DESC
LIMIT 5;


#14) BOTTOM 5 PIZZAS BY REVENUE

SELECT * FROM ORDER_DETAILS;
SELECT * FROM PIZZAS;
SELECT * FROM PIZZA_TYPES;

SELECT NAME_, SUM(QUANTITY*PRICE) AS PIZZA_REVENUE
FROM ORDER_DETAILS AS OD
JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID
JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE_ID = PT.PIZZA_TYPE_ID
GROUP BY NAME_
ORDER BY PIZZA_REVENUE
LIMIT 5;
